package cl.camanchaca.orders.mappers;

import cl.camanchaca.domain.models.Product;
import cl.camanchaca.orders.adapters.postgres.product.ProductData;

public class ProductMapper {
    public static ProductData toProductData(Product product) {
        return ProductData.builder()
                .anomes(product.getAnomes())
                .codigo(product.getCodigo())
                .ajusteSp(product.getAjusteSp())
                .ajusteSpPr(product.getAjusteSpPr())
                .bloquesBp(product.getBloquesBp())
                .bloquesHarasu(product.getBloquesHarasu())
                .cDist(product.getCDist())
                .cEmp(product.getCEmp())
                .cProcTotal(product.getCProcTotal())
                .caja(product.getCaja())
                .calibre(product.getCalibre())
                .calibreTrimd(product.getCalibreTrimd())
                .calidad(product.getCalidad())
                .calidadLast(product.getCalidadLast())
                .calidadObj(product.getCalidadObj())
                .color(product.getColor())
                .degrWfe(product.getDegrWfe())
                .descripcion(product.getDescripcion())
                .empPrimario(product.getEmpPrimario())
                .estado(product.getEstado())
                .especie(product.getEspecie())
                .factorSp(product.getFactorSp())
                .familia(product.getFamilia())
                .forma(product.getForma())
                .harina(product.getHarina())
                .mandt(product.getMandt())
                .mesano(product.getMesano())
                .netoWfe(product.getNetoWfe())
                .rendimiento(product.getRendimiento())
                .scale(product.getScale())
                .scrapeMeat(product.getScrapeMeat())
                .skin(product.getSkin())
                .sobrepeso(product.getSobrepeso())
                .subpWfe(product.getSubpWfe())
                .target(product.getTarget())
                .tipo(product.getTipo())
                .ultPerProd(product.getUltPerProd())
                .wfeBkBp(product.getWfeBkBp())
                .wfeBkHarasu(product.getWfeBkHarasu())
                .wfeHarina(product.getWfeHarina())
                .wfeMeat(product.getWfeMeat())
                .build();
    }


    public static Product toProduct(ProductData productData) {
        return Product.builder()
                .anomes(productData.getAnomes())
                .codigo(productData.getCodigo())
                .ajusteSp(productData.getAjusteSp())
                .ajusteSpPr(productData.getAjusteSpPr())
                .bloquesBp(productData.getBloquesBp())
                .bloquesHarasu(productData.getBloquesHarasu())
                .cDist(productData.getCDist())
                .cEmp(productData.getCEmp())
                .cProcTotal(productData.getCProcTotal())
                .caja(productData.getCaja())
                .calibre(productData.getCalibre())
                .calibreTrimd(productData.getCalibreTrimd())
                .calidad(productData.getCalidad())
                .calidadLast(productData.getCalidadLast())
                .calidadObj(productData.getCalidadObj())
                .color(productData.getColor())
                .degrWfe(productData.getDegrWfe())
                .descripcion(productData.getDescripcion())
                .empPrimario(productData.getEmpPrimario())
                .estado(productData.getEstado())
                .especie(productData.getEspecie())
                .factorSp(productData.getFactorSp())
                .familia(productData.getFamilia())
                .forma(productData.getForma())
                .harina(productData.getHarina())
                .mandt(productData.getMandt())
                .mesano(productData.getMesano())
                .netoWfe(productData.getNetoWfe())
                .rendimiento(productData.getRendimiento())
                .scale(productData.getScale())
                .scrapeMeat(productData.getScrapeMeat())
                .skin(productData.getSkin())
                .sobrepeso(productData.getSobrepeso())
                .subpWfe(productData.getSubpWfe())
                .target(productData.getTarget())
                .tipo(productData.getTipo())
                .ultPerProd(productData.getUltPerProd())
                .wfeBkBp(productData.getWfeBkBp())
                .wfeBkHarasu(productData.getWfeBkHarasu())
                .wfeHarina(productData.getWfeHarina())
                .wfeMeat(productData.getWfeMeat())
                .build();
    }

    private ProductMapper(){}
}
